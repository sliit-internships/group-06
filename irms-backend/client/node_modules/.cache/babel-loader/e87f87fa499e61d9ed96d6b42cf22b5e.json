{"ast":null,"code":"var _jsxFileName = \"D:\\\\irms-backend\\\\client\\\\src\\\\components\\\\login.component.js\";\nimport React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport AuthService from \"../services/auth.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst required = value => {\n  if (!value) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"This field is required!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n};\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      loading: false,\n      message: \"\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleLogin(e) {\n    e.preventDefault();\n    this.setState({\n      message: \"\",\n      loading: true\n    });\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.login(this.state.username, this.state.password).then(() => {\n        this.props.history.push(\"/profile\");\n        window.location.reload();\n      }, error => {\n        const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n        this.setState({\n          loading: false,\n          message: resMessage\n        });\n      });\n    } else {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card card-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\",\n          alt: \"profile-img\",\n          className: \"profile-img-card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.handleLogin,\n          ref: c => {\n            this.form = c;\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"username\",\n              value: this.state.username,\n              onChange: this.onChangeUsername,\n              validations: [required]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"password\",\n              className: \"form-control\",\n              name: \"password\",\n              value: this.state.password,\n              onChange: this.onChangePassword,\n              validations: [required]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary btn-block\",\n              disabled: this.state.loading,\n              children: [this.state.loading && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"spinner-border spinner-border-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              //buttonStyle={forgotButton}\n              buttonText: \"Forgot Password?\" //link=\"/forgotPassword\"\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this), this.state.message && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"alert alert-danger\",\n              role: \"alert\",\n              children: this.state.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CheckButton, {\n            style: {\n              display: \"none\"\n            },\n            ref: c => {\n              this.checkBtn = c;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/irms-backend/client/src/components/login.component.js"],"names":["React","Component","Form","Input","CheckButton","AuthService","required","value","Login","constructor","props","handleLogin","bind","onChangeUsername","onChangePassword","state","username","password","loading","message","e","setState","target","preventDefault","form","validateAll","checkBtn","context","_errors","length","login","then","history","push","window","location","reload","error","resMessage","response","data","toString","render","c","display"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      loading: false,\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleLogin(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      loading: true,\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.login(this.state.username, this.state.password).then(\r\n        () => {\r\n          this.props.history.push(\"/profile\");\r\n          window.location.reload();\r\n        },\r\n        (error) => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            loading: false,\r\n            message: resMessage,\r\n          });\r\n        }\r\n      );\r\n    } else {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n          <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          />\r\n\r\n          <Form\r\n            onSubmit={this.handleLogin}\r\n            ref={(c) => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"username\">Username</label>\r\n              <Input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"username\"\r\n                value={this.state.username}\r\n                onChange={this.onChangeUsername}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <Input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.onChangePassword}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <button\r\n                className=\"btn btn-primary btn-block\"\r\n                disabled={this.state.loading}\r\n              >\r\n                {this.state.loading && (\r\n                  <span className=\"spinner-border spinner-border-sm\"></span>\r\n                )}\r\n                <span>Login</span>\r\n              </button>\r\n              </div>\r\n              <div className=\"form-group\">\r\n              <button\r\n                //buttonStyle={forgotButton}\r\n                buttonText=\"Forgot Password?\"\r\n                //link=\"/forgotPassword\"\r\n              />\r\n            </div>\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={(c) => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}